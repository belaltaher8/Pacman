|skeleton
resetn => resetn.IN1
ps2_clock <> PS2_Interface:myps2.port2
ps2_data <> PS2_Interface:myps2.port3
debug_data_in[0] <= <GND>
debug_data_in[1] <= <GND>
debug_data_in[2] <= <GND>
debug_data_in[3] <= <GND>
debug_data_in[4] <= <GND>
debug_data_in[5] <= <GND>
debug_data_in[6] <= <GND>
debug_data_in[7] <= <GND>
debug_data_in[8] <= <GND>
debug_data_in[9] <= <GND>
debug_data_in[10] <= <GND>
debug_data_in[11] <= <GND>
debug_data_in[12] <= <GND>
debug_data_in[13] <= <GND>
debug_data_in[14] <= <GND>
debug_data_in[15] <= <GND>
debug_data_in[16] <= <GND>
debug_data_in[17] <= <GND>
debug_data_in[18] <= <GND>
debug_data_in[19] <= <GND>
debug_data_in[20] <= <GND>
debug_data_in[21] <= <GND>
debug_data_in[22] <= <GND>
debug_data_in[23] <= <GND>
debug_data_in[24] <= <GND>
debug_data_in[25] <= <GND>
debug_data_in[26] <= <GND>
debug_data_in[27] <= <GND>
debug_data_in[28] <= <GND>
debug_data_in[29] <= <GND>
debug_data_in[30] <= <GND>
debug_data_in[31] <= <GND>
debug_addr[0] <= <GND>
debug_addr[1] <= <GND>
debug_addr[2] <= <GND>
debug_addr[3] <= <GND>
debug_addr[4] <= <GND>
debug_addr[5] <= <GND>
debug_addr[6] <= <GND>
debug_addr[7] <= <GND>
debug_addr[8] <= <GND>
debug_addr[9] <= <GND>
debug_addr[10] <= <GND>
debug_addr[11] <= <GND>
leds[0] <= <VCC>
leds[1] <= <VCC>
leds[2] <= <GND>
leds[3] <= <VCC>
leds[4] <= <GND>
leds[5] <= <VCC>
leds[6] <= <GND>
leds[7] <= <GND>
lcd_data[0] <= <GND>
lcd_data[1] <= <GND>
lcd_data[2] <= <GND>
lcd_data[3] <= <GND>
lcd_data[4] <= <GND>
lcd_data[5] <= <GND>
lcd_data[6] <= <GND>
lcd_data[7] <= <GND>
lcd_rw <= <GND>
lcd_en <= <GND>
lcd_rs <= <GND>
lcd_on <= <GND>
lcd_blon <= <GND>
seg1[0] <= Hexadecimal_To_Seven_Segment:hex1.port1
seg1[1] <= Hexadecimal_To_Seven_Segment:hex1.port1
seg1[2] <= Hexadecimal_To_Seven_Segment:hex1.port1
seg1[3] <= Hexadecimal_To_Seven_Segment:hex1.port1
seg1[4] <= Hexadecimal_To_Seven_Segment:hex1.port1
seg1[5] <= Hexadecimal_To_Seven_Segment:hex1.port1
seg1[6] <= Hexadecimal_To_Seven_Segment:hex1.port1
seg2[0] <= Hexadecimal_To_Seven_Segment:hex2.port1
seg2[1] <= Hexadecimal_To_Seven_Segment:hex2.port1
seg2[2] <= Hexadecimal_To_Seven_Segment:hex2.port1
seg2[3] <= Hexadecimal_To_Seven_Segment:hex2.port1
seg2[4] <= Hexadecimal_To_Seven_Segment:hex2.port1
seg2[5] <= Hexadecimal_To_Seven_Segment:hex2.port1
seg2[6] <= Hexadecimal_To_Seven_Segment:hex2.port1
seg3[0] <= Hexadecimal_To_Seven_Segment:hex3.port1
seg3[1] <= Hexadecimal_To_Seven_Segment:hex3.port1
seg3[2] <= Hexadecimal_To_Seven_Segment:hex3.port1
seg3[3] <= Hexadecimal_To_Seven_Segment:hex3.port1
seg3[4] <= Hexadecimal_To_Seven_Segment:hex3.port1
seg3[5] <= Hexadecimal_To_Seven_Segment:hex3.port1
seg3[6] <= Hexadecimal_To_Seven_Segment:hex3.port1
seg4[0] <= Hexadecimal_To_Seven_Segment:hex4.port1
seg4[1] <= Hexadecimal_To_Seven_Segment:hex4.port1
seg4[2] <= Hexadecimal_To_Seven_Segment:hex4.port1
seg4[3] <= Hexadecimal_To_Seven_Segment:hex4.port1
seg4[4] <= Hexadecimal_To_Seven_Segment:hex4.port1
seg4[5] <= Hexadecimal_To_Seven_Segment:hex4.port1
seg4[6] <= Hexadecimal_To_Seven_Segment:hex4.port1
seg5[0] <= Hexadecimal_To_Seven_Segment:hex5.port1
seg5[1] <= Hexadecimal_To_Seven_Segment:hex5.port1
seg5[2] <= Hexadecimal_To_Seven_Segment:hex5.port1
seg5[3] <= Hexadecimal_To_Seven_Segment:hex5.port1
seg5[4] <= Hexadecimal_To_Seven_Segment:hex5.port1
seg5[5] <= Hexadecimal_To_Seven_Segment:hex5.port1
seg5[6] <= Hexadecimal_To_Seven_Segment:hex5.port1
seg6[0] <= Hexadecimal_To_Seven_Segment:hex6.port1
seg6[1] <= Hexadecimal_To_Seven_Segment:hex6.port1
seg6[2] <= Hexadecimal_To_Seven_Segment:hex6.port1
seg6[3] <= Hexadecimal_To_Seven_Segment:hex6.port1
seg6[4] <= Hexadecimal_To_Seven_Segment:hex6.port1
seg6[5] <= Hexadecimal_To_Seven_Segment:hex6.port1
seg6[6] <= Hexadecimal_To_Seven_Segment:hex6.port1
seg7[0] <= Hexadecimal_To_Seven_Segment:hex7.port1
seg7[1] <= Hexadecimal_To_Seven_Segment:hex7.port1
seg7[2] <= Hexadecimal_To_Seven_Segment:hex7.port1
seg7[3] <= Hexadecimal_To_Seven_Segment:hex7.port1
seg7[4] <= Hexadecimal_To_Seven_Segment:hex7.port1
seg7[5] <= Hexadecimal_To_Seven_Segment:hex7.port1
seg7[6] <= Hexadecimal_To_Seven_Segment:hex7.port1
seg8[0] <= Hexadecimal_To_Seven_Segment:hex8.port1
seg8[1] <= Hexadecimal_To_Seven_Segment:hex8.port1
seg8[2] <= Hexadecimal_To_Seven_Segment:hex8.port1
seg8[3] <= Hexadecimal_To_Seven_Segment:hex8.port1
seg8[4] <= Hexadecimal_To_Seven_Segment:hex8.port1
seg8[5] <= Hexadecimal_To_Seven_Segment:hex8.port1
seg8[6] <= Hexadecimal_To_Seven_Segment:hex8.port1
VGA_CLK <= <GND>
VGA_HS <= <GND>
VGA_VS <= <GND>
VGA_BLANK <= <GND>
VGA_SYNC <= <GND>
VGA_R[0] <= <GND>
VGA_R[1] <= <GND>
VGA_R[2] <= <GND>
VGA_R[3] <= <GND>
VGA_R[4] <= <GND>
VGA_R[5] <= <GND>
VGA_R[6] <= <GND>
VGA_R[7] <= <GND>
VGA_G[0] <= <GND>
VGA_G[1] <= <GND>
VGA_G[2] <= <GND>
VGA_G[3] <= <GND>
VGA_G[4] <= <GND>
VGA_G[5] <= <GND>
VGA_G[6] <= <GND>
VGA_G[7] <= <GND>
VGA_B[0] <= <GND>
VGA_B[1] <= <GND>
VGA_B[2] <= <GND>
VGA_B[3] <= <GND>
VGA_B[4] <= <GND>
VGA_B[5] <= <GND>
VGA_B[6] <= <GND>
VGA_B[7] <= <GND>
CLOCK_50 => clock.IN3


|skeleton|pll:div
inclk0 => sub_wire3[0].IN1
c0 <= altpll:altpll_component.clk


|skeleton|pll:div|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|skeleton|pll:div|altpll:altpll_component|pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
clk[5] <= <GND>
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|skeleton|PS2_Interface:myps2
inclock => inclock.IN1
resetn => last_data_received.OUTPUTSELECT
resetn => last_data_received.OUTPUTSELECT
resetn => last_data_received.OUTPUTSELECT
resetn => last_data_received.OUTPUTSELECT
resetn => last_data_received.OUTPUTSELECT
resetn => last_data_received.OUTPUTSELECT
resetn => last_data_received.OUTPUTSELECT
resetn => last_data_received.OUTPUTSELECT
resetn => _.IN1
ps2_clock <> PS2_Controller:PS2.PS2_CLK
ps2_data <> PS2_Controller:PS2.PS2_DAT
ps2_key_data[0] <= PS2_Controller:PS2.received_data
ps2_key_data[1] <= PS2_Controller:PS2.received_data
ps2_key_data[2] <= PS2_Controller:PS2.received_data
ps2_key_data[3] <= PS2_Controller:PS2.received_data
ps2_key_data[4] <= PS2_Controller:PS2.received_data
ps2_key_data[5] <= PS2_Controller:PS2.received_data
ps2_key_data[6] <= PS2_Controller:PS2.received_data
ps2_key_data[7] <= PS2_Controller:PS2.received_data
ps2_key_pressed <= PS2_Controller:PS2.received_data_en
last_data_received[0] <= last_data_received[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
last_data_received[1] <= last_data_received[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
last_data_received[2] <= last_data_received[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
last_data_received[3] <= last_data_received[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
last_data_received[4] <= last_data_received[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
last_data_received[5] <= last_data_received[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
last_data_received[6] <= last_data_received[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
last_data_received[7] <= last_data_received[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|PS2_Interface:myps2|PS2_Controller:PS2
CLOCK_50 => CLOCK_50.IN2
reset => reset.IN2
the_command[0] => the_command_w[0].IN1
the_command[1] => the_command_w[1].IN1
the_command[2] => the_command_w[2].IN1
the_command[3] => the_command_w[3].IN1
the_command[4] => the_command_w[4].IN1
the_command[5] => the_command_w[5].IN1
the_command[6] => the_command_w[6].IN1
the_command[7] => the_command_w[7].IN1
send_command => send_command_w.IN1
PS2_CLK <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_CLK
PS2_DAT <> Altera_UP_PS2_Command_Out:PS2_Command_Out.PS2_DAT
command_was_sent <= Altera_UP_PS2_Command_Out:PS2_Command_Out.command_was_sent
error_communication_timed_out <= Altera_UP_PS2_Command_Out:PS2_Command_Out.error_communication_timed_out
received_data[0] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[1] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[2] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[3] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[4] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[5] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[6] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data[7] <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data
received_data_en <= Altera_UP_PS2_Data_In:PS2_Data_In.received_data_en


|skeleton|PS2_Interface:myps2|PS2_Controller:PS2|Altera_UP_PS2_Data_In:PS2_Data_In
clk => received_data_en~reg0.CLK
clk => received_data[0]~reg0.CLK
clk => received_data[1]~reg0.CLK
clk => received_data[2]~reg0.CLK
clk => received_data[3]~reg0.CLK
clk => received_data[4]~reg0.CLK
clk => received_data[5]~reg0.CLK
clk => received_data[6]~reg0.CLK
clk => received_data[7]~reg0.CLK
clk => data_shift_reg[0].CLK
clk => data_shift_reg[1].CLK
clk => data_shift_reg[2].CLK
clk => data_shift_reg[3].CLK
clk => data_shift_reg[4].CLK
clk => data_shift_reg[5].CLK
clk => data_shift_reg[6].CLK
clk => data_shift_reg[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => s_ps2_receiver~1.DATAIN
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => s_ps2_receiver.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_count.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => data_shift_reg.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data.OUTPUTSELECT
reset => received_data_en.OUTPUTSELECT
wait_for_incoming_data => always1.IN1
wait_for_incoming_data => ns_ps2_receiver.DATAA
wait_for_incoming_data => ns_ps2_receiver.DATAA
start_receiving_data => always1.IN1
ps2_clk_posedge => always1.IN0
ps2_clk_posedge => always1.IN1
ps2_clk_posedge => always2.IN0
ps2_clk_posedge => always5.IN0
ps2_clk_posedge => Selector4.IN3
ps2_clk_posedge => Selector0.IN4
ps2_clk_posedge => Selector4.IN1
ps2_clk_posedge => Selector3.IN2
ps2_clk_negedge => ~NO_FANOUT~
ps2_data => data_shift_reg.DATAB
ps2_data => always1.IN1
received_data[0] <= received_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[1] <= received_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[2] <= received_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[3] <= received_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[4] <= received_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[5] <= received_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[6] <= received_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data[7] <= received_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
received_data_en <= received_data_en~reg0.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|PS2_Interface:myps2|PS2_Controller:PS2|Altera_UP_PS2_Command_Out:PS2_Command_Out
clk => error_communication_timed_out~reg0.CLK
clk => command_was_sent~reg0.CLK
clk => cur_bit[0].CLK
clk => cur_bit[1].CLK
clk => cur_bit[2].CLK
clk => cur_bit[3].CLK
clk => transfer_counter[1].CLK
clk => transfer_counter[2].CLK
clk => transfer_counter[3].CLK
clk => transfer_counter[4].CLK
clk => transfer_counter[5].CLK
clk => transfer_counter[6].CLK
clk => transfer_counter[7].CLK
clk => transfer_counter[8].CLK
clk => transfer_counter[9].CLK
clk => transfer_counter[10].CLK
clk => transfer_counter[11].CLK
clk => transfer_counter[12].CLK
clk => transfer_counter[13].CLK
clk => transfer_counter[14].CLK
clk => transfer_counter[15].CLK
clk => transfer_counter[16].CLK
clk => transfer_counter[17].CLK
clk => waiting_counter[1].CLK
clk => waiting_counter[2].CLK
clk => waiting_counter[3].CLK
clk => waiting_counter[4].CLK
clk => waiting_counter[5].CLK
clk => waiting_counter[6].CLK
clk => waiting_counter[7].CLK
clk => waiting_counter[8].CLK
clk => waiting_counter[9].CLK
clk => waiting_counter[10].CLK
clk => waiting_counter[11].CLK
clk => waiting_counter[12].CLK
clk => waiting_counter[13].CLK
clk => waiting_counter[14].CLK
clk => waiting_counter[15].CLK
clk => waiting_counter[16].CLK
clk => waiting_counter[17].CLK
clk => waiting_counter[18].CLK
clk => waiting_counter[19].CLK
clk => waiting_counter[20].CLK
clk => command_initiate_counter[1].CLK
clk => command_initiate_counter[2].CLK
clk => command_initiate_counter[3].CLK
clk => command_initiate_counter[4].CLK
clk => command_initiate_counter[5].CLK
clk => command_initiate_counter[6].CLK
clk => command_initiate_counter[7].CLK
clk => command_initiate_counter[8].CLK
clk => command_initiate_counter[9].CLK
clk => command_initiate_counter[10].CLK
clk => command_initiate_counter[11].CLK
clk => command_initiate_counter[12].CLK
clk => command_initiate_counter[13].CLK
clk => ps2_command[0].CLK
clk => ps2_command[1].CLK
clk => ps2_command[2].CLK
clk => ps2_command[3].CLK
clk => ps2_command[4].CLK
clk => ps2_command[5].CLK
clk => ps2_command[6].CLK
clk => ps2_command[7].CLK
clk => ps2_command[8].CLK
clk => s_ps2_transmitter~1.DATAIN
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => s_ps2_transmitter.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => ps2_command.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => command_initiate_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => waiting_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => transfer_counter.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => cur_bit.OUTPUTSELECT
reset => command_was_sent.OUTPUTSELECT
reset => error_communication_timed_out.OUTPUTSELECT
the_command[0] => WideXor0.IN0
the_command[0] => ps2_command.DATAB
the_command[1] => WideXor0.IN1
the_command[1] => ps2_command.DATAB
the_command[2] => WideXor0.IN2
the_command[2] => ps2_command.DATAB
the_command[3] => WideXor0.IN3
the_command[3] => ps2_command.DATAB
the_command[4] => WideXor0.IN4
the_command[4] => ps2_command.DATAB
the_command[5] => WideXor0.IN5
the_command[5] => ps2_command.DATAB
the_command[6] => WideXor0.IN6
the_command[6] => ps2_command.DATAB
the_command[7] => WideXor0.IN7
the_command[7] => ps2_command.DATAB
send_command => Selector1.IN3
send_command => Selector6.IN2
send_command => Selector7.IN6
send_command => command_was_sent.OUTPUTSELECT
send_command => error_communication_timed_out.OUTPUTSELECT
send_command => Selector0.IN1
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_posedge => Selector6.IN3
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always1.IN1
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => ns_ps2_transmitter.OUTPUTSELECT
ps2_clk_negedge => always6.IN0
ps2_clk_negedge => Selector3.IN3
ps2_clk_negedge => Selector5.IN3
PS2_CLK <> PS2_CLK
PS2_DAT <> PS2_DAT
command_was_sent <= command_was_sent~reg0.DB_MAX_OUTPUT_PORT_TYPE
error_communication_timed_out <= error_communication_timed_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|ps2_fsm:my_ps2_fsm
key_pressed => ~NO_FANOUT~
clock => afterF.CLK
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => counter[6].CLK
clock => counter[7].CLK
clock => counter[8].CLK
clock => counter[9].CLK
clock => counter[10].CLK
clock => counter[11].CLK
clock => counter[12].CLK
clock => counter[13].CLK
clock => counter[14].CLK
clock => counter[15].CLK
clock => counter[16].CLK
clock => counter[17].CLK
clock => counter[18].CLK
clock => counter[19].CLK
clock => counter[20].CLK
clock => counter[21].CLK
clock => counter[22].CLK
clock => counter[23].CLK
clock => counter[24].CLK
clock => counter[25].CLK
clock => counter[26].CLK
clock => counter[27].CLK
clock => counter[28].CLK
clock => counter[29].CLK
clock => counter[30].CLK
clock => counter[31].CLK
clock => out[0]~reg0.CLK
clock => out[1]~reg0.CLK
clock => out[2]~reg0.CLK
clock => out[3]~reg0.CLK
clock => out[4]~reg0.CLK
clock => out[5]~reg0.CLK
clock => out[6]~reg0.CLK
clock => out[7]~reg0.CLK
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => afterF.OUTPUTSELECT
in[0] => out.DATAB
in[0] => Equal1.IN7
in[1] => out.DATAB
in[1] => Equal1.IN6
in[2] => out.DATAB
in[2] => Equal1.IN5
in[3] => out.DATAB
in[3] => Equal1.IN4
in[4] => out.DATAB
in[4] => Equal1.IN3
in[5] => out.DATAB
in[5] => Equal1.IN2
in[6] => out.DATAB
in[6] => Equal1.IN1
in[7] => out.DATAB
in[7] => Equal1.IN0
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex1
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex2
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex3
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex4
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex5
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex6
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex7
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


|skeleton|Hexadecimal_To_Seven_Segment:hex8
hex_number[0] => Equal0.IN3
hex_number[0] => Equal1.IN0
hex_number[0] => Equal2.IN3
hex_number[0] => Equal3.IN1
hex_number[0] => Equal4.IN3
hex_number[0] => Equal5.IN1
hex_number[0] => Equal6.IN3
hex_number[0] => Equal7.IN2
hex_number[0] => Equal8.IN1
hex_number[0] => Equal9.IN3
hex_number[0] => Equal10.IN2
hex_number[0] => Equal11.IN3
hex_number[0] => Equal12.IN2
hex_number[0] => Equal13.IN3
hex_number[0] => Equal14.IN3
hex_number[1] => Equal0.IN2
hex_number[1] => Equal1.IN3
hex_number[1] => Equal2.IN0
hex_number[1] => Equal3.IN0
hex_number[1] => Equal4.IN2
hex_number[1] => Equal5.IN3
hex_number[1] => Equal6.IN1
hex_number[1] => Equal7.IN1
hex_number[1] => Equal8.IN3
hex_number[1] => Equal9.IN1
hex_number[1] => Equal10.IN1
hex_number[1] => Equal11.IN2
hex_number[1] => Equal12.IN3
hex_number[1] => Equal13.IN2
hex_number[1] => Equal14.IN2
hex_number[2] => Equal0.IN1
hex_number[2] => Equal1.IN2
hex_number[2] => Equal2.IN2
hex_number[2] => Equal3.IN3
hex_number[2] => Equal4.IN0
hex_number[2] => Equal5.IN0
hex_number[2] => Equal6.IN0
hex_number[2] => Equal7.IN0
hex_number[2] => Equal8.IN2
hex_number[2] => Equal9.IN2
hex_number[2] => Equal10.IN3
hex_number[2] => Equal11.IN1
hex_number[2] => Equal12.IN1
hex_number[2] => Equal13.IN1
hex_number[2] => Equal14.IN1
hex_number[3] => Equal0.IN0
hex_number[3] => Equal1.IN1
hex_number[3] => Equal2.IN1
hex_number[3] => Equal3.IN2
hex_number[3] => Equal4.IN1
hex_number[3] => Equal5.IN2
hex_number[3] => Equal6.IN2
hex_number[3] => Equal7.IN3
hex_number[3] => Equal8.IN0
hex_number[3] => Equal9.IN0
hex_number[3] => Equal10.IN0
hex_number[3] => Equal11.IN0
hex_number[3] => Equal12.IN0
hex_number[3] => Equal13.IN0
hex_number[3] => Equal14.IN0
seven_seg_display[0] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[1] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[2] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[3] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[4] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[5] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE
seven_seg_display[6] <= seven_seg_display.DB_MAX_OUTPUT_PORT_TYPE


